name: Notify Discord of New Release

on:
  schedule:
    - cron: '0 * * * *' # Check every hour
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up JQ
      run: sudo apt-get install jq

    - name: Initialize previous release
      run: |
        if [ ! -f previous_release ]; then
          echo "previous_release=" > previous_release
        fi

    - name: Load previous release
      id: load_prev_release
      run: |
        if [ -f previous_release ]; then
          source previous_release
        else
          echo "previous_release="
        fi
        echo "Previous release: $previous_release" >> $GITHUB_ENV

    - name: Check for New Release
      id: check_release
      run: |
        latest_release=$(curl -s https://api.github.com/repos/wowsims/cata/releases/latest)
        latest_release_name=$(echo $latest_release | jq -r '.tag_name')
        latest_release_url=$(echo $latest_release | jq -r '.html_url')
        latest_release_body=$(echo $latest_release | jq -r '.body')
        
        echo "Latest release: $latest_release_name" >> $GITHUB_ENV
        echo "release_name=$latest_release_name" >> $GITHUB_ENV
        echo "release_url=$latest_release_url" >> $GITHUB_ENV
        echo "release_body=$latest_release_body" >> $GITHUB_ENV

    - name: Debug Outputs
      run: |
        echo "Previous release: ${{ env.previous_release }}"
        echo "Current release: ${{ env.release_name }}"

    - name: Send Discord Notification
      if: env.release_name != env.previous_release
      env:
        DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
      run: |
        curl -H "Content-Type: application/json" -X POST -d \
        '{"content": "New release published for wowsims/cata: **'"${{ env.release_name }}"'**\n\nDetails: '"${{ env.release_body }}"'\n\n[View Release](<'"${{ env.release_url }}"'>)"}' \
        $DISCORD_WEBHOOK_URL

    - name: Update Release Version
      if: env.release_name != env.previous_release
      run: |
        echo "previous_release=${{ env.release_name }}" > previous_release
        git config --global user.email "you@example.com"
        git config --global user.name "GitHub Actions"
        git add previous_release
        git commit -m "Update previous release version"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
